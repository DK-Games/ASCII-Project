/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package game;
import java.io.*;
import java.util.*;

public class DataFile {

    static String[] world= new String[Reference.MAP_TOTAL],
            entities = new String[Reference.MAP_TOTAL];
    static String[][] player = new String[4][1000];
    
    static File file =  new File(Reference.SAVE_FILE_PATH);
    private static int height=0,
                       width=0,
                       cHeight=0,
                       cWidth=0;
    public static int   health=0,
                        mana=0,
                        totalMana=0,
                        totalHealth=0,
                        defense=0,
                        attack=0,
                        speed=0,
                        magic=0;
    public void getStats() {
        this.health = Integer.parseInt(player[0][0]);
        this.totalHealth = Integer.parseInt(player[0][1]);
        this.mana = Integer.parseInt(player[0][2]);
        this.totalMana = Integer.parseInt(player[0][3]);
        this.defense= Integer.parseInt(player[0][4]);
        this.attack= Integer.parseInt(player[0][5]);
        this.speed= Integer.parseInt(player[0][6]);
        this.magic = Integer.parseInt(player[0][7]);
    }
    public static void set() {
        player[0]=new String[Reference.NUM_STATS];
        player[1]=new String[Reference.NUM_EQUIP];
        player[2]=new String[Reference.EQUIP_TOTAL+1];
    }
    public static void worldDim ( ) {
        world = new String[(height*width)];
    }
    
    public void setHeight(int height){
        this.height = height;
    }
    
    public void setWidth(int width){
        this.width = width;
    }
    
    public int getWidth() {
        return(width);
    }
    
    public int getHeight() {
        return(height);
    }
    public void setCHeight(int height){
        this.cHeight = cHeight;
    }
    
    public void setCWidth(int width){
        this.cWidth = cWidth;
    }
    
    public int getCWidth() {
        return(cWidth);
    }
    
    public int getCHeight() {
        return(cHeight);
    }
    public static void saveFile() {     
        try {
            set();
            FileOutputStream writer;	
            writer = new FileOutputStream (file);
            file.delete();
            file = new File(Reference.SAVE_FILE_PATH);
            new PrintStream(writer).print (height+" ");
            new PrintStream(writer).print(width+" ");
            new PrintStream(writer).print (cHeight+" ");
            new PrintStream(writer).println (cWidth);
            new PrintStream(writer).println();
            int n=0;
            while ((n+1)<height*width) {
                new PrintStream(writer).print(world[n]+" ");
                n++;
                if((n+1)%width==0)
                {
                    new PrintStream(writer).println(world[n]);
                    n++;
                }
            }
            new PrintStream(writer).println();
            n=0;    
            while((n+1)<height*width) {
                new PrintStream(writer).print(entities[n]+" ");
                n++;
                 if((n+1)%width==0)
                {
                    new PrintStream(writer).println(entities[n]);
                    n++;
                }
            }
            new PrintStream(writer).println();
            n=0;
            int i=0;
            while(n<4)
            {
                while(i<Reference.NUM_STATS&&n<1)
                {
                    new PrintStream(writer).print(player[n][i]+" ");
                    i++;
                }
                while(n<2&&i<Reference.NUM_EQUIP)
                {
                    new PrintStream(writer).print(player[n][i]+" ");
                    i++;
                }
                while(i<Reference.EQUIP_TOTAL&&n==2)
                {
                    new PrintStream(writer).print(player[n][i]+" ");
                    i++;
                }
                new PrintStream(writer).println();
                n++;
                i=0;
            }
        } catch (FileNotFoundException ex) {
            System.out.println("Error");
        } catch (IOException ex) {
            System.out.println("Error");
        }
    }
    public static void loadWorld( ) {
        try {
            set();
            Scanner reader = new Scanner(file);
            
            height = reader.nextInt();
            width = reader.nextInt();
            cHeight = reader.nextInt();
            cWidth = reader.nextInt();
            reader.nextLine();
            reader.nextLine();
            int n=0;    
            while((n+1)<height*width)  {
                world[n] = reader.next();
                n++;
                if((n+1)%width==0)
                {
                    reader.nextLine();
                }
            }
            reader.nextLine();
            n=0;
            while((n+1)<height*width)  {
                entities[n] = reader.next();
                n++;
                if((n+1)%width==0)
                {
                    reader.nextLine();
                    
                }
            }
            reader.nextLine();
            n=0;
            int i=0;
          while(n<3)
          {
              while(n<1&&i<Reference.NUM_STATS)
              {
              player[n][i]=reader.next();
              i++;
              }
              while(n<2&&i<Reference.NUM_EQUIP)
              {
              player[n][i]=reader.next();
              i++;
              }
              while(n==2&&i<Reference.EQUIP_TOTAL)
              {
                    player[n][i]=reader.next();
                    i++;
              }
                  reader.nextLine();
                  n++;
                  i=0;
              
              
          }
        } catch (FileNotFoundException ex) {
            System.out.println("Error2");
        }
    }
    public static void readWorld( ) {
        try {
            Scanner reader = new Scanner(file);
            
            reader.nextLine();
            reader.nextLine();
            int n=0;    
            while((n+1)<height*width)  {
                world[n] = reader.next();
                n++;
                if((n+1)%width==0)
                {
                    reader.nextLine();
                }
            }
            reader.nextLine();
            n=0;
            while((n+1)<height*width)  {
                entities[n] = reader.next();
                n++;
                if((n+1)%width==0)
                {
                    reader.nextLine();
                    
                }
            }
        } catch (FileNotFoundException ex) {
            System.out.println("Error2");
        }
    }
    public static void readEntity( ) {
        try {
            Scanner reader = new Scanner(file);
            for(int i=0;i<=height+2;i++)
            reader.nextLine();
            int n=0;    
            while((n+1)<height*width)  {
                entities[n] = reader.next();
                n++;
                if((n+1)%width==0)
                {
                    reader.nextLine();
                    
                }
            }
        } catch (FileNotFoundException ex) {
            System.out.println("Error2");
        }
    }
    public static void readPlayer( ) {
        try {
            Scanner reader = new Scanner(file);
          for(int i=0;i<=(height*2)+2;i++)
            reader.nextLine();
          int n=0,
              i=0;
          while(n<3)
          {
              while(n<1&&i<Reference.NUM_STATS)
              {
              player[n][i]=reader.next();
              i++;
              }
               while(n<2&&i<Reference.NUM_EQUIP)
              {
              player[n][i]=reader.next();
              i++;
              }
              while(n==2&&i<Reference.EQUIP_TOTAL)
              {
                    player[n][i]=reader.next();
                    i++;
              }
                  reader.nextLine();
                  n++;
                  i=0;
              
          }
        } catch (FileNotFoundException ex) {
            System.out.println("Error2");
        }
    }

}
